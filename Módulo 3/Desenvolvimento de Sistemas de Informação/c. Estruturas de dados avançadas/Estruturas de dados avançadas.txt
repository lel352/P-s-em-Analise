Estruturas de dados avançadas
Nesse módulo foram mostradas as estruturas de dados clássicas, como as árvores auto balanceadas, destacando suas aplicações no universo computacional e pequenas partes de código mostrando suas implementações. Outras estruturas que merecem destaque são o Hash, Heap e a Partição Dinâmica, cujas aplicações são de extrema importância nos campos da segurança da informação, filas de prioridades e junção de conjuntos disjuntos, para manipulação de banco de dados. Por fim, foi apresentada a estrutura de dados conhecida como grafo, suas aplicações em complexidade de algoritmos e seus principais algoritmos.

Na ciência da computação, uma Estrutura de Dados (ED) representa um modo específico de armazenamento e organização de dados, ao passo que possam ser usados eficientemente, facilitando diretamente as busca e modificação. No momento em que estes dados estão dispostos de forma coerente, representam uma forma, uma estrutura de dados. O trabalho e os métodos para manipular essa estrutura e que lhe confere uma particularidade (como a minimização do espaço ocupado na memória RAM), além de tornar o código-fonte mais sucinto e simples. O destaque para as principais estruturas de dados clássicas:

• Vetor: Um arranjo (array) é uma estrutura de dados que guarda uma coleção de elementos de tal forma que cada um dos elementos possa ser apresentado por, pelo menos, um índice ou uma chave.

• Lista: Uma lista ou sequência é uma estrutura de dados abstrata que forma uma coleção ordenada de valores, onde o mesmo valor pode ocorrer mais de uma vez.

• Pilha: Uma pilha (stack) é um tipo abstrato de dado e estrutura de dados baseado no princípio de Last In First Out (LIFO), isto é, "o último que entra é o primeiro que sai" caracterizando uma organização de dados.

• Fila: o primeiro elemento a sair é o primeiro que entrar, onde um algoritmo de escalonamento não preemptivo que entrega processos por chegada a CPU.

• Árvore: diferente das listas, em que os dados estão numa sequência, nas árvores os dados estão dispostos de forma hierárquica, seus elementos se encontram "acima" ou "abaixo" de outras partes da árvore.

 

Uma árvore binária de busca balanceada ou árvore binária de busca auto-balanceada pode ser qualquer árvore de busca binária que mantém a sua altura menor mesmo depois de sucessivas inserções e exclusões arbitrárias.

Árvore AVL (ou árvore balanceada pela altura) é uma árvore de busca binária auto-balanceada. Em tal árvore, a altura de dois nós, folha, difere no máximo em uma unidade. As operações de busca, inserção e eliminação de elementos possuem complexidade 0. O balanceamento é requerido para as operações de adição e exclusão de elementos.

Uma função hash é um algoritmo que organiza dados de comprimento variável para dados de comprimento fixo. A função hash também é útil em criptografia. A função hash criptográfica possibilita verificar facilmente alguns mapeamentos de dados de entrada para um valor hash fornecido, mas se conhecemos os dados de entrada, é extremamente difícil reconstruí-lo (ou alternativas equivalentes) conhecendo o valor do hash guardado.

O heap é uma estrutura de dados formada em árvore especializada que é particularmente uma árvore quase completa que atende a propriedade heap: em um heap máximo, para qualquer nó C dado, se P for um nó pai de C, então a chave de P é maior ou igual à chave de C. Em uma pilha mínima, a chave de P é menor ou igual à chave de C. O nó no "topo" da pilha é chamado o nó raiz.

A Partição Dinâmica é uma estrutura de dados de conjuntos disjuntos (Disjoint-set data structure), também conhecida como "Union Find" ou ainda "Merge Find", é uma estrutura de dados que manipula um conjunto de elementos disjuntos particionados em subconjuntos.

A teoria dos grafos é um campo da matemática que estuda as relações entre os objetos de um determinado conjunto.

Dependendo do uso, arestas podem ou não ter direção, pode ser permitido ou não arestas ligarem um vértice a ele próprio e vértices e/ou arestas podem ter um peso associado.

Os grafos são frequentemente representados graficamente da seguinte maneira: é desenhado um círculo para cada vértice, para cada aresta é traçado um arco conectando suas extremidades. Para um grafo direcionado, seu sentido é indicado na aresta por uma seta.

 

 

 

Atividade Extra

O vídeo em que é apresentado o algoritmo de Dijkstra, bem como sua aplicação na teoria dos grafos, irá contribuir na consolidação dos elementos teóricos estudados neste módulo.

Link do vídeo: https://youtu.be/hsJBilAiZDY.

 

 

 

Referência Bibliográfica

SOMMERVILLE, I. Engenharia de  Software, 9ª Edição. Pearson  Education, 2011.

SOMMERVILLE, I. Software engineering 10th Edition. ISBN-10, 137035152, 18., 2015.

VALENTE, M. T. Engenharia de Software Moderna (Livro Digital)., 2020.

JEFFRIES, R.; ANDERSON, A.; HENDRICKSON, C.  Extreme programming installed. Addison-Wesley Professional., 2001.

REIS, E. The lean startup. New York: Crown Business, 27.   – MVP, 2011.

VALENTE, M. T. Engenharia de Software Moderna (Livro Digital). Disponível em: <https://engsoftmoderna.info/cap0.html>. Acesso em: 04 jun. 2021., 2020.

VELOSO, P., dos SANTOS, C., AZEREDO, P.; FURTADO, A. Estrutura de dados. Campus. Editra Campus, 1986.

MARINHO, A. L. Análise e modelagem de sistemas. Person Education do Brasil, 2016.

LIMA, D. Arrays em Java. www.plugmasters.com.br. Consultado em 21 de junho de 2012. Arquivado do original em 31 de maio de 2012

GOODRICH, M. T.; TAMASSIA, R. Estruturas de Dados e Algoritmos em Java 5ª ed. Porto Alegre: Bookman. ISBN 978-85-8260-018-4, 2013.

KNUTH, D. E. The Art of Computer Programming. 4, Fascicle 4: Generating All Trees—History of Combinatorial Generation. ISBN 978-0-321-33570-8., 2006.

 The MD4 Message-Digest Algorithm. April 1992. Disponível em: < https://www.ietf.org/rfc/rfc1320.txt >. Acesso em: 04 ago. 2021.

CORMEN, T. H.  INTRODUCTION TO ALGORITHMS. United States of America: The MIT Press Cambridge, Massachusetts London, England. pp. 151–152. ISBN 978-0-262-03384-8., 2009.

BIGGS, N.; LLOYD, E.; WILSON, R. Graph Theory, 1736-1936, Oxford University Press, 1986.


1.É um modo particular de armazenamento e organização de dados em um computador de modo que possam ser usados eficientemente, facilitando sua busca e modificação:
R:Estrutura de dados
Exp:Letra b. A letra b é a alternativa correta, pois é a única que descreve os conceitos de estrutura de dados em ciência da computação, quando estes dados estão organizados (dispostos) de forma coerente

2.São consideradas as principais estruturas de dados clássicas:
R:Vetor, lista, pilha, fila, árvore
Exp:Letra a. A letra a é a alternativa correta, pois lista de forma clara e direta as estruturas de dados consideradas clássicas

3.É qualquer árvore de busca binária que automaticamente mantém a sua altura (número máximo de níveis abaixo da raiz) pequena mesmo depois de sucessivas inserções e exclusões arbitrárias:
R:Árvore de busca auto-balanceada
Exp:Letra d. A letra d é a alternativa correta, pois árvores binárias de busca balanceadas resolvem este problema através da realização de transformações na árvore, como rotações), a fim de manter a altura proporcional a log2(n). Apesar de uma certa sobrecarga estar envolvida, isso pode ser justificado, a longo prazo, assegurando a rápida execução de operações posteriores

4.É um algoritmo que mapeia dados de comprimento variável para dados de comprimento fixo:
R:Função hash
Exp:Letra c. A letra c é a alternativa correta, os valores retornados por uma função hash são chamados valores hash, códigos hash, somas hash (hash sums), checksums ou simplesmente hashes. Um uso é uma estrutura de dados chamada de tabela hash, amplamente usada em software de computador para consulta de dados rápida. Funções hash aceleram consultas a tabelas ou bancos de dados por meio da detecção de registros duplicados em um arquivo grande

5.Dependendo da aplicação, arestas podem ou não ter direção, pode ser permitido ou não arestas ligarem um vértice a ele próprio e vértices e/ou arestas podem ter um peso (numérico) associado:
R:Grafo
Exp:Letra e. A letra e é a alternativa correta, pois a teoria dos grafos ou de grafos é um ramo da matemática que estuda as relações entre os objetos de um determinado conjunto

6.O algoritmo considera um conjunto S de menores caminhos, iniciado com um vértice inicial I. A cada passo do algoritmo busca-se nas adjacências dos vértices pertencentes a S aquele vértice com menor distância relativa a I e adiciona-o a S e, então, repetindo os passos até que todos os vértices alcançáveis por I estejam em S. Arestas que ligam vértices já pertencentes a S são desconsideradas. Um exemplo prático do problema que pode ser resolvido por esse algoritmo é: alguém precisa se deslocar de uma cidade para outra. Para isso, ela dispõe de várias estradas, que passam por diversas cidades. Qual delas oferece uma trajetória de menor caminho? É tido como um dos mais importantes dos algoritmos em grafos:
R:Algoritmo de Dijkstra
Exp:Letra a. A letra a é a alternativa correta, pois dos algoritmos listados o algoritmo de Dijkstra é considerado muito importante no contexto da teoria dos grafos